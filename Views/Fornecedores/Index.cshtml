@model IEnumerable<Empresa.Models.Fornecedor>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Fornecedor</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("SupAdmin"))
                {
                    <p>
                        <a asp-action="Create">Create New</a>
                    </p>
                }
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Empresa)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Localizacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contato)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Empresa)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Localizacao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contato)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
                @if (SignInManager.IsSignedIn(User) && User.IsInRole("SupAdmin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.FornecedorId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.FornecedorId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.FornecedorId">Delete</a>
                    </td>
                }
        </tr>
}
    </tbody>
</table>
